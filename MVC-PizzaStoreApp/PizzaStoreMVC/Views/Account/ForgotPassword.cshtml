@model PizzaStoreMVC.Models.ForgotPassword

@{
    ViewBag.Title = "ForgotPassword";
    Layout = null;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css" />
<style>
    body {
        font-family: "Poppins", sans-serif;
    }

    .btn {
        display: inline-block;
        background-color: #fc7c7c;
        padding: 1.2rem 3.5rem;
        color: white;
        font-size: 15px;
        font-weight: 600;
        text-transform: uppercase;
        margin-top: 20px;
        margin-left: 40px;
        margin-bottom: 40px;
    }

        .btn:hover {
            background-color: #101010;
            color: white;
        }

    .header1 {
        background: linear-gradient(to left, #ffafbd, #ffc3a0);
        padding: 15px 0;
    }

        .header1 h2 {
            font-family: 'Montserrat', sans-serif;
            font-size: 24px;
            text-transform: uppercase;
            text-align: center;
            font-weight: 600;
        }
        .header1 h4 {
            font-family: 'Montserrat', sans-serif;
            font-size: 18px;
            text-transform: uppercase;
            text-align: center;
            font-weight: 600;
            margin-bottom:10px;
        }

    .form1 {
        padding-right: 40px;
        font-size: 10px;
    }

    .form-group {
        padding-right: 20px;
        padding-left: 30px;
        position: relative;
    }

        .form-group label {
            display: inline-block;
            font-size: 20px;
        }

        .form-group input {
            width: 95%;
            border: 2px solid #f0f0f0;
            border-radius: 5px;
            display: block;
            font-family: 'Mulish', sans-serif;
            font-size: 15px;
            padding: 12px;
        }

            .form-group input:focus {
                outline: 0;
                border-color: #777;
            }

    .container1 {
        background-color: #fff;
        border-radius: 10px;
        -webkit-border-radius: 10px;
        box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034), 0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.3px;
        overflow: hidden;
        width: calc(100vw - 65vw);
        max-width: 100%;
        align-items: center;
        justify-content: center;
        margin: 60px 470px 0px 440px;
    }

    .text-danger {
        color: red;
        font-size: 12px;
    }
</style>

@using (Html.BeginForm())
{
    <body style="background: url('../../fonts/Images/Pizzastore.png') no-repeat center center fixed; background-repeat: no-repeat; background-size: cover;">
        <br>
        <div class="container1">
            @Html.AntiForgeryToken()
            <div class="header1">
                <h2>Forgot Password?</h2>
                <h4 style="color:@TempData["color"]">@TempData["Message"]</h4>
            </div>
            <form class="form1" id="form">
                <div class="container ml-3"></div>
                <div class="container form-horizontal">
                    <h3 class="container text text-danger">@ViewBag.isValid</h3><br />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div><br />

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div><br />

                    <div class="form-group">
                        @Html.LabelFor(model => model.cPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cPassword, "", new { @class = "text-danger" })
                        </div>
                    </div><br />

                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Change" class="btn btn-default" />
                        <input type="button" value="Login" onclick="@("window.location.href='" + @Url.Action("Login", "Account") + "'");" class="btn btn-default" />
                    </div>
                </div>
            </form>
        </div>
    </body>
}